/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var types_pb = require('./types_pb.js');
goog.exportSymbol('proto.spacemesh.v1.AccountMeshData', null, global);
goog.exportSymbol('proto.spacemesh.v1.AccountMeshDataFilter', null, global);
goog.exportSymbol('proto.spacemesh.v1.AccountMeshDataFlag', null, global);
goog.exportSymbol('proto.spacemesh.v1.AccountMeshDataQueryRequest', null, global);
goog.exportSymbol('proto.spacemesh.v1.AccountMeshDataQueryResponse', null, global);
goog.exportSymbol('proto.spacemesh.v1.AccountMeshDataStreamRequest', null, global);
goog.exportSymbol('proto.spacemesh.v1.AccountMeshDataStreamResponse', null, global);
goog.exportSymbol('proto.spacemesh.v1.CurrentEpochRequest', null, global);
goog.exportSymbol('proto.spacemesh.v1.CurrentEpochResponse', null, global);
goog.exportSymbol('proto.spacemesh.v1.CurrentLayerRequest', null, global);
goog.exportSymbol('proto.spacemesh.v1.CurrentLayerResponse', null, global);
goog.exportSymbol('proto.spacemesh.v1.EpochNumLayersRequest', null, global);
goog.exportSymbol('proto.spacemesh.v1.EpochNumLayersResponse', null, global);
goog.exportSymbol('proto.spacemesh.v1.GenesisTimeRequest', null, global);
goog.exportSymbol('proto.spacemesh.v1.GenesisTimeResponse', null, global);
goog.exportSymbol('proto.spacemesh.v1.LayerDurationRequest', null, global);
goog.exportSymbol('proto.spacemesh.v1.LayerDurationResponse', null, global);
goog.exportSymbol('proto.spacemesh.v1.LayerStreamRequest', null, global);
goog.exportSymbol('proto.spacemesh.v1.LayerStreamResponse', null, global);
goog.exportSymbol('proto.spacemesh.v1.LayersQueryRequest', null, global);
goog.exportSymbol('proto.spacemesh.v1.LayersQueryResponse', null, global);
goog.exportSymbol('proto.spacemesh.v1.MaxTransactionsPerSecondRequest', null, global);
goog.exportSymbol('proto.spacemesh.v1.MaxTransactionsPerSecondResponse', null, global);
goog.exportSymbol('proto.spacemesh.v1.NetIDRequest', null, global);
goog.exportSymbol('proto.spacemesh.v1.NetIDResponse', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.spacemesh.v1.GenesisTimeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.spacemesh.v1.GenesisTimeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.spacemesh.v1.GenesisTimeRequest.displayName = 'proto.spacemesh.v1.GenesisTimeRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.spacemesh.v1.GenesisTimeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.spacemesh.v1.GenesisTimeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.spacemesh.v1.GenesisTimeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spacemesh.v1.GenesisTimeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.spacemesh.v1.GenesisTimeRequest}
 */
proto.spacemesh.v1.GenesisTimeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.spacemesh.v1.GenesisTimeRequest;
  return proto.spacemesh.v1.GenesisTimeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.spacemesh.v1.GenesisTimeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.spacemesh.v1.GenesisTimeRequest}
 */
proto.spacemesh.v1.GenesisTimeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.spacemesh.v1.GenesisTimeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.spacemesh.v1.GenesisTimeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.spacemesh.v1.GenesisTimeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spacemesh.v1.GenesisTimeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.spacemesh.v1.GenesisTimeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.spacemesh.v1.GenesisTimeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.spacemesh.v1.GenesisTimeResponse.displayName = 'proto.spacemesh.v1.GenesisTimeResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.spacemesh.v1.GenesisTimeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.spacemesh.v1.GenesisTimeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.spacemesh.v1.GenesisTimeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spacemesh.v1.GenesisTimeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    unixtime: (f = msg.getUnixtime()) && types_pb.SimpleInt.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.spacemesh.v1.GenesisTimeResponse}
 */
proto.spacemesh.v1.GenesisTimeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.spacemesh.v1.GenesisTimeResponse;
  return proto.spacemesh.v1.GenesisTimeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.spacemesh.v1.GenesisTimeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.spacemesh.v1.GenesisTimeResponse}
 */
proto.spacemesh.v1.GenesisTimeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new types_pb.SimpleInt;
      reader.readMessage(value,types_pb.SimpleInt.deserializeBinaryFromReader);
      msg.setUnixtime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.spacemesh.v1.GenesisTimeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.spacemesh.v1.GenesisTimeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.spacemesh.v1.GenesisTimeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spacemesh.v1.GenesisTimeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUnixtime();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      types_pb.SimpleInt.serializeBinaryToWriter
    );
  }
};


/**
 * optional SimpleInt unixtime = 1;
 * @return {?proto.spacemesh.v1.SimpleInt}
 */
proto.spacemesh.v1.GenesisTimeResponse.prototype.getUnixtime = function() {
  return /** @type{?proto.spacemesh.v1.SimpleInt} */ (
    jspb.Message.getWrapperField(this, types_pb.SimpleInt, 1));
};


/** @param {?proto.spacemesh.v1.SimpleInt|undefined} value */
proto.spacemesh.v1.GenesisTimeResponse.prototype.setUnixtime = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.spacemesh.v1.GenesisTimeResponse.prototype.clearUnixtime = function() {
  this.setUnixtime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.spacemesh.v1.GenesisTimeResponse.prototype.hasUnixtime = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.spacemesh.v1.CurrentLayerRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.spacemesh.v1.CurrentLayerRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.spacemesh.v1.CurrentLayerRequest.displayName = 'proto.spacemesh.v1.CurrentLayerRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.spacemesh.v1.CurrentLayerRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.spacemesh.v1.CurrentLayerRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.spacemesh.v1.CurrentLayerRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spacemesh.v1.CurrentLayerRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.spacemesh.v1.CurrentLayerRequest}
 */
proto.spacemesh.v1.CurrentLayerRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.spacemesh.v1.CurrentLayerRequest;
  return proto.spacemesh.v1.CurrentLayerRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.spacemesh.v1.CurrentLayerRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.spacemesh.v1.CurrentLayerRequest}
 */
proto.spacemesh.v1.CurrentLayerRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.spacemesh.v1.CurrentLayerRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.spacemesh.v1.CurrentLayerRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.spacemesh.v1.CurrentLayerRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spacemesh.v1.CurrentLayerRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.spacemesh.v1.CurrentLayerResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.spacemesh.v1.CurrentLayerResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.spacemesh.v1.CurrentLayerResponse.displayName = 'proto.spacemesh.v1.CurrentLayerResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.spacemesh.v1.CurrentLayerResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.spacemesh.v1.CurrentLayerResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.spacemesh.v1.CurrentLayerResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spacemesh.v1.CurrentLayerResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    layernum: (f = msg.getLayernum()) && types_pb.LayerNumber.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.spacemesh.v1.CurrentLayerResponse}
 */
proto.spacemesh.v1.CurrentLayerResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.spacemesh.v1.CurrentLayerResponse;
  return proto.spacemesh.v1.CurrentLayerResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.spacemesh.v1.CurrentLayerResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.spacemesh.v1.CurrentLayerResponse}
 */
proto.spacemesh.v1.CurrentLayerResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new types_pb.LayerNumber;
      reader.readMessage(value,types_pb.LayerNumber.deserializeBinaryFromReader);
      msg.setLayernum(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.spacemesh.v1.CurrentLayerResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.spacemesh.v1.CurrentLayerResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.spacemesh.v1.CurrentLayerResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spacemesh.v1.CurrentLayerResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLayernum();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      types_pb.LayerNumber.serializeBinaryToWriter
    );
  }
};


/**
 * optional LayerNumber layernum = 1;
 * @return {?proto.spacemesh.v1.LayerNumber}
 */
proto.spacemesh.v1.CurrentLayerResponse.prototype.getLayernum = function() {
  return /** @type{?proto.spacemesh.v1.LayerNumber} */ (
    jspb.Message.getWrapperField(this, types_pb.LayerNumber, 1));
};


/** @param {?proto.spacemesh.v1.LayerNumber|undefined} value */
proto.spacemesh.v1.CurrentLayerResponse.prototype.setLayernum = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.spacemesh.v1.CurrentLayerResponse.prototype.clearLayernum = function() {
  this.setLayernum(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.spacemesh.v1.CurrentLayerResponse.prototype.hasLayernum = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.spacemesh.v1.CurrentEpochRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.spacemesh.v1.CurrentEpochRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.spacemesh.v1.CurrentEpochRequest.displayName = 'proto.spacemesh.v1.CurrentEpochRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.spacemesh.v1.CurrentEpochRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.spacemesh.v1.CurrentEpochRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.spacemesh.v1.CurrentEpochRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spacemesh.v1.CurrentEpochRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.spacemesh.v1.CurrentEpochRequest}
 */
proto.spacemesh.v1.CurrentEpochRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.spacemesh.v1.CurrentEpochRequest;
  return proto.spacemesh.v1.CurrentEpochRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.spacemesh.v1.CurrentEpochRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.spacemesh.v1.CurrentEpochRequest}
 */
proto.spacemesh.v1.CurrentEpochRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.spacemesh.v1.CurrentEpochRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.spacemesh.v1.CurrentEpochRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.spacemesh.v1.CurrentEpochRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spacemesh.v1.CurrentEpochRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.spacemesh.v1.CurrentEpochResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.spacemesh.v1.CurrentEpochResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.spacemesh.v1.CurrentEpochResponse.displayName = 'proto.spacemesh.v1.CurrentEpochResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.spacemesh.v1.CurrentEpochResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.spacemesh.v1.CurrentEpochResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.spacemesh.v1.CurrentEpochResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spacemesh.v1.CurrentEpochResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    epochnum: (f = msg.getEpochnum()) && types_pb.SimpleInt.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.spacemesh.v1.CurrentEpochResponse}
 */
proto.spacemesh.v1.CurrentEpochResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.spacemesh.v1.CurrentEpochResponse;
  return proto.spacemesh.v1.CurrentEpochResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.spacemesh.v1.CurrentEpochResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.spacemesh.v1.CurrentEpochResponse}
 */
proto.spacemesh.v1.CurrentEpochResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new types_pb.SimpleInt;
      reader.readMessage(value,types_pb.SimpleInt.deserializeBinaryFromReader);
      msg.setEpochnum(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.spacemesh.v1.CurrentEpochResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.spacemesh.v1.CurrentEpochResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.spacemesh.v1.CurrentEpochResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spacemesh.v1.CurrentEpochResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEpochnum();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      types_pb.SimpleInt.serializeBinaryToWriter
    );
  }
};


/**
 * optional SimpleInt epochnum = 1;
 * @return {?proto.spacemesh.v1.SimpleInt}
 */
proto.spacemesh.v1.CurrentEpochResponse.prototype.getEpochnum = function() {
  return /** @type{?proto.spacemesh.v1.SimpleInt} */ (
    jspb.Message.getWrapperField(this, types_pb.SimpleInt, 1));
};


/** @param {?proto.spacemesh.v1.SimpleInt|undefined} value */
proto.spacemesh.v1.CurrentEpochResponse.prototype.setEpochnum = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.spacemesh.v1.CurrentEpochResponse.prototype.clearEpochnum = function() {
  this.setEpochnum(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.spacemesh.v1.CurrentEpochResponse.prototype.hasEpochnum = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.spacemesh.v1.NetIDRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.spacemesh.v1.NetIDRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.spacemesh.v1.NetIDRequest.displayName = 'proto.spacemesh.v1.NetIDRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.spacemesh.v1.NetIDRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.spacemesh.v1.NetIDRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.spacemesh.v1.NetIDRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spacemesh.v1.NetIDRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.spacemesh.v1.NetIDRequest}
 */
proto.spacemesh.v1.NetIDRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.spacemesh.v1.NetIDRequest;
  return proto.spacemesh.v1.NetIDRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.spacemesh.v1.NetIDRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.spacemesh.v1.NetIDRequest}
 */
proto.spacemesh.v1.NetIDRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.spacemesh.v1.NetIDRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.spacemesh.v1.NetIDRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.spacemesh.v1.NetIDRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spacemesh.v1.NetIDRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.spacemesh.v1.NetIDResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.spacemesh.v1.NetIDResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.spacemesh.v1.NetIDResponse.displayName = 'proto.spacemesh.v1.NetIDResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.spacemesh.v1.NetIDResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.spacemesh.v1.NetIDResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.spacemesh.v1.NetIDResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spacemesh.v1.NetIDResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    netid: (f = msg.getNetid()) && types_pb.SimpleInt.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.spacemesh.v1.NetIDResponse}
 */
proto.spacemesh.v1.NetIDResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.spacemesh.v1.NetIDResponse;
  return proto.spacemesh.v1.NetIDResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.spacemesh.v1.NetIDResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.spacemesh.v1.NetIDResponse}
 */
proto.spacemesh.v1.NetIDResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new types_pb.SimpleInt;
      reader.readMessage(value,types_pb.SimpleInt.deserializeBinaryFromReader);
      msg.setNetid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.spacemesh.v1.NetIDResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.spacemesh.v1.NetIDResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.spacemesh.v1.NetIDResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spacemesh.v1.NetIDResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNetid();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      types_pb.SimpleInt.serializeBinaryToWriter
    );
  }
};


/**
 * optional SimpleInt netid = 1;
 * @return {?proto.spacemesh.v1.SimpleInt}
 */
proto.spacemesh.v1.NetIDResponse.prototype.getNetid = function() {
  return /** @type{?proto.spacemesh.v1.SimpleInt} */ (
    jspb.Message.getWrapperField(this, types_pb.SimpleInt, 1));
};


/** @param {?proto.spacemesh.v1.SimpleInt|undefined} value */
proto.spacemesh.v1.NetIDResponse.prototype.setNetid = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.spacemesh.v1.NetIDResponse.prototype.clearNetid = function() {
  this.setNetid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.spacemesh.v1.NetIDResponse.prototype.hasNetid = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.spacemesh.v1.EpochNumLayersRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.spacemesh.v1.EpochNumLayersRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.spacemesh.v1.EpochNumLayersRequest.displayName = 'proto.spacemesh.v1.EpochNumLayersRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.spacemesh.v1.EpochNumLayersRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.spacemesh.v1.EpochNumLayersRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.spacemesh.v1.EpochNumLayersRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spacemesh.v1.EpochNumLayersRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.spacemesh.v1.EpochNumLayersRequest}
 */
proto.spacemesh.v1.EpochNumLayersRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.spacemesh.v1.EpochNumLayersRequest;
  return proto.spacemesh.v1.EpochNumLayersRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.spacemesh.v1.EpochNumLayersRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.spacemesh.v1.EpochNumLayersRequest}
 */
proto.spacemesh.v1.EpochNumLayersRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.spacemesh.v1.EpochNumLayersRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.spacemesh.v1.EpochNumLayersRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.spacemesh.v1.EpochNumLayersRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spacemesh.v1.EpochNumLayersRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.spacemesh.v1.EpochNumLayersResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.spacemesh.v1.EpochNumLayersResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.spacemesh.v1.EpochNumLayersResponse.displayName = 'proto.spacemesh.v1.EpochNumLayersResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.spacemesh.v1.EpochNumLayersResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.spacemesh.v1.EpochNumLayersResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.spacemesh.v1.EpochNumLayersResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spacemesh.v1.EpochNumLayersResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    numlayers: (f = msg.getNumlayers()) && types_pb.SimpleInt.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.spacemesh.v1.EpochNumLayersResponse}
 */
proto.spacemesh.v1.EpochNumLayersResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.spacemesh.v1.EpochNumLayersResponse;
  return proto.spacemesh.v1.EpochNumLayersResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.spacemesh.v1.EpochNumLayersResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.spacemesh.v1.EpochNumLayersResponse}
 */
proto.spacemesh.v1.EpochNumLayersResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new types_pb.SimpleInt;
      reader.readMessage(value,types_pb.SimpleInt.deserializeBinaryFromReader);
      msg.setNumlayers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.spacemesh.v1.EpochNumLayersResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.spacemesh.v1.EpochNumLayersResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.spacemesh.v1.EpochNumLayersResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spacemesh.v1.EpochNumLayersResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNumlayers();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      types_pb.SimpleInt.serializeBinaryToWriter
    );
  }
};


/**
 * optional SimpleInt numlayers = 1;
 * @return {?proto.spacemesh.v1.SimpleInt}
 */
proto.spacemesh.v1.EpochNumLayersResponse.prototype.getNumlayers = function() {
  return /** @type{?proto.spacemesh.v1.SimpleInt} */ (
    jspb.Message.getWrapperField(this, types_pb.SimpleInt, 1));
};


/** @param {?proto.spacemesh.v1.SimpleInt|undefined} value */
proto.spacemesh.v1.EpochNumLayersResponse.prototype.setNumlayers = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.spacemesh.v1.EpochNumLayersResponse.prototype.clearNumlayers = function() {
  this.setNumlayers(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.spacemesh.v1.EpochNumLayersResponse.prototype.hasNumlayers = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.spacemesh.v1.LayerDurationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.spacemesh.v1.LayerDurationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.spacemesh.v1.LayerDurationRequest.displayName = 'proto.spacemesh.v1.LayerDurationRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.spacemesh.v1.LayerDurationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.spacemesh.v1.LayerDurationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.spacemesh.v1.LayerDurationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spacemesh.v1.LayerDurationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.spacemesh.v1.LayerDurationRequest}
 */
proto.spacemesh.v1.LayerDurationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.spacemesh.v1.LayerDurationRequest;
  return proto.spacemesh.v1.LayerDurationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.spacemesh.v1.LayerDurationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.spacemesh.v1.LayerDurationRequest}
 */
proto.spacemesh.v1.LayerDurationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.spacemesh.v1.LayerDurationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.spacemesh.v1.LayerDurationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.spacemesh.v1.LayerDurationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spacemesh.v1.LayerDurationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.spacemesh.v1.LayerDurationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.spacemesh.v1.LayerDurationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.spacemesh.v1.LayerDurationResponse.displayName = 'proto.spacemesh.v1.LayerDurationResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.spacemesh.v1.LayerDurationResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.spacemesh.v1.LayerDurationResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.spacemesh.v1.LayerDurationResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spacemesh.v1.LayerDurationResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    duration: (f = msg.getDuration()) && types_pb.SimpleInt.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.spacemesh.v1.LayerDurationResponse}
 */
proto.spacemesh.v1.LayerDurationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.spacemesh.v1.LayerDurationResponse;
  return proto.spacemesh.v1.LayerDurationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.spacemesh.v1.LayerDurationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.spacemesh.v1.LayerDurationResponse}
 */
proto.spacemesh.v1.LayerDurationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new types_pb.SimpleInt;
      reader.readMessage(value,types_pb.SimpleInt.deserializeBinaryFromReader);
      msg.setDuration(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.spacemesh.v1.LayerDurationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.spacemesh.v1.LayerDurationResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.spacemesh.v1.LayerDurationResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spacemesh.v1.LayerDurationResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDuration();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      types_pb.SimpleInt.serializeBinaryToWriter
    );
  }
};


/**
 * optional SimpleInt duration = 1;
 * @return {?proto.spacemesh.v1.SimpleInt}
 */
proto.spacemesh.v1.LayerDurationResponse.prototype.getDuration = function() {
  return /** @type{?proto.spacemesh.v1.SimpleInt} */ (
    jspb.Message.getWrapperField(this, types_pb.SimpleInt, 1));
};


/** @param {?proto.spacemesh.v1.SimpleInt|undefined} value */
proto.spacemesh.v1.LayerDurationResponse.prototype.setDuration = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.spacemesh.v1.LayerDurationResponse.prototype.clearDuration = function() {
  this.setDuration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.spacemesh.v1.LayerDurationResponse.prototype.hasDuration = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.spacemesh.v1.MaxTransactionsPerSecondRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.spacemesh.v1.MaxTransactionsPerSecondRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.spacemesh.v1.MaxTransactionsPerSecondRequest.displayName = 'proto.spacemesh.v1.MaxTransactionsPerSecondRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.spacemesh.v1.MaxTransactionsPerSecondRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.spacemesh.v1.MaxTransactionsPerSecondRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.spacemesh.v1.MaxTransactionsPerSecondRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spacemesh.v1.MaxTransactionsPerSecondRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.spacemesh.v1.MaxTransactionsPerSecondRequest}
 */
proto.spacemesh.v1.MaxTransactionsPerSecondRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.spacemesh.v1.MaxTransactionsPerSecondRequest;
  return proto.spacemesh.v1.MaxTransactionsPerSecondRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.spacemesh.v1.MaxTransactionsPerSecondRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.spacemesh.v1.MaxTransactionsPerSecondRequest}
 */
proto.spacemesh.v1.MaxTransactionsPerSecondRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.spacemesh.v1.MaxTransactionsPerSecondRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.spacemesh.v1.MaxTransactionsPerSecondRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.spacemesh.v1.MaxTransactionsPerSecondRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spacemesh.v1.MaxTransactionsPerSecondRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.spacemesh.v1.MaxTransactionsPerSecondResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.spacemesh.v1.MaxTransactionsPerSecondResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.spacemesh.v1.MaxTransactionsPerSecondResponse.displayName = 'proto.spacemesh.v1.MaxTransactionsPerSecondResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.spacemesh.v1.MaxTransactionsPerSecondResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.spacemesh.v1.MaxTransactionsPerSecondResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.spacemesh.v1.MaxTransactionsPerSecondResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spacemesh.v1.MaxTransactionsPerSecondResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    maxTxsPerSecond: (f = msg.getMaxTxsPerSecond()) && types_pb.SimpleInt.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.spacemesh.v1.MaxTransactionsPerSecondResponse}
 */
proto.spacemesh.v1.MaxTransactionsPerSecondResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.spacemesh.v1.MaxTransactionsPerSecondResponse;
  return proto.spacemesh.v1.MaxTransactionsPerSecondResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.spacemesh.v1.MaxTransactionsPerSecondResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.spacemesh.v1.MaxTransactionsPerSecondResponse}
 */
proto.spacemesh.v1.MaxTransactionsPerSecondResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new types_pb.SimpleInt;
      reader.readMessage(value,types_pb.SimpleInt.deserializeBinaryFromReader);
      msg.setMaxTxsPerSecond(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.spacemesh.v1.MaxTransactionsPerSecondResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.spacemesh.v1.MaxTransactionsPerSecondResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.spacemesh.v1.MaxTransactionsPerSecondResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spacemesh.v1.MaxTransactionsPerSecondResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMaxTxsPerSecond();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      types_pb.SimpleInt.serializeBinaryToWriter
    );
  }
};


/**
 * optional SimpleInt max_txs_per_second = 1;
 * @return {?proto.spacemesh.v1.SimpleInt}
 */
proto.spacemesh.v1.MaxTransactionsPerSecondResponse.prototype.getMaxTxsPerSecond = function() {
  return /** @type{?proto.spacemesh.v1.SimpleInt} */ (
    jspb.Message.getWrapperField(this, types_pb.SimpleInt, 1));
};


/** @param {?proto.spacemesh.v1.SimpleInt|undefined} value */
proto.spacemesh.v1.MaxTransactionsPerSecondResponse.prototype.setMaxTxsPerSecond = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.spacemesh.v1.MaxTransactionsPerSecondResponse.prototype.clearMaxTxsPerSecond = function() {
  this.setMaxTxsPerSecond(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.spacemesh.v1.MaxTransactionsPerSecondResponse.prototype.hasMaxTxsPerSecond = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.spacemesh.v1.AccountMeshDataFilter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.spacemesh.v1.AccountMeshDataFilter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.spacemesh.v1.AccountMeshDataFilter.displayName = 'proto.spacemesh.v1.AccountMeshDataFilter';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.spacemesh.v1.AccountMeshDataFilter.prototype.toObject = function(opt_includeInstance) {
  return proto.spacemesh.v1.AccountMeshDataFilter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.spacemesh.v1.AccountMeshDataFilter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spacemesh.v1.AccountMeshDataFilter.toObject = function(includeInstance, msg) {
  var f, obj = {
    accountId: (f = msg.getAccountId()) && types_pb.AccountId.toObject(includeInstance, f),
    accountMeshDataFlags: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.spacemesh.v1.AccountMeshDataFilter}
 */
proto.spacemesh.v1.AccountMeshDataFilter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.spacemesh.v1.AccountMeshDataFilter;
  return proto.spacemesh.v1.AccountMeshDataFilter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.spacemesh.v1.AccountMeshDataFilter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.spacemesh.v1.AccountMeshDataFilter}
 */
proto.spacemesh.v1.AccountMeshDataFilter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new types_pb.AccountId;
      reader.readMessage(value,types_pb.AccountId.deserializeBinaryFromReader);
      msg.setAccountId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setAccountMeshDataFlags(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.spacemesh.v1.AccountMeshDataFilter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.spacemesh.v1.AccountMeshDataFilter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.spacemesh.v1.AccountMeshDataFilter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spacemesh.v1.AccountMeshDataFilter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccountId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      types_pb.AccountId.serializeBinaryToWriter
    );
  }
  f = message.getAccountMeshDataFlags();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional AccountId account_id = 1;
 * @return {?proto.spacemesh.v1.AccountId}
 */
proto.spacemesh.v1.AccountMeshDataFilter.prototype.getAccountId = function() {
  return /** @type{?proto.spacemesh.v1.AccountId} */ (
    jspb.Message.getWrapperField(this, types_pb.AccountId, 1));
};


/** @param {?proto.spacemesh.v1.AccountId|undefined} value */
proto.spacemesh.v1.AccountMeshDataFilter.prototype.setAccountId = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.spacemesh.v1.AccountMeshDataFilter.prototype.clearAccountId = function() {
  this.setAccountId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.spacemesh.v1.AccountMeshDataFilter.prototype.hasAccountId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 account_mesh_data_flags = 2;
 * @return {number}
 */
proto.spacemesh.v1.AccountMeshDataFilter.prototype.getAccountMeshDataFlags = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.spacemesh.v1.AccountMeshDataFilter.prototype.setAccountMeshDataFlags = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.spacemesh.v1.AccountMeshData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.spacemesh.v1.AccountMeshData.oneofGroups_);
};
goog.inherits(proto.spacemesh.v1.AccountMeshData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.spacemesh.v1.AccountMeshData.displayName = 'proto.spacemesh.v1.AccountMeshData';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.spacemesh.v1.AccountMeshData.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.spacemesh.v1.AccountMeshData.DatumCase = {
  DATUM_NOT_SET: 0,
  TRANSACTION: 1,
  ACTIVATION: 2
};

/**
 * @return {proto.spacemesh.v1.AccountMeshData.DatumCase}
 */
proto.spacemesh.v1.AccountMeshData.prototype.getDatumCase = function() {
  return /** @type {proto.spacemesh.v1.AccountMeshData.DatumCase} */(jspb.Message.computeOneofCase(this, proto.spacemesh.v1.AccountMeshData.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.spacemesh.v1.AccountMeshData.prototype.toObject = function(opt_includeInstance) {
  return proto.spacemesh.v1.AccountMeshData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.spacemesh.v1.AccountMeshData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spacemesh.v1.AccountMeshData.toObject = function(includeInstance, msg) {
  var f, obj = {
    transaction: (f = msg.getTransaction()) && types_pb.Transaction.toObject(includeInstance, f),
    activation: (f = msg.getActivation()) && types_pb.Activation.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.spacemesh.v1.AccountMeshData}
 */
proto.spacemesh.v1.AccountMeshData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.spacemesh.v1.AccountMeshData;
  return proto.spacemesh.v1.AccountMeshData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.spacemesh.v1.AccountMeshData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.spacemesh.v1.AccountMeshData}
 */
proto.spacemesh.v1.AccountMeshData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new types_pb.Transaction;
      reader.readMessage(value,types_pb.Transaction.deserializeBinaryFromReader);
      msg.setTransaction(value);
      break;
    case 2:
      var value = new types_pb.Activation;
      reader.readMessage(value,types_pb.Activation.deserializeBinaryFromReader);
      msg.setActivation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.spacemesh.v1.AccountMeshData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.spacemesh.v1.AccountMeshData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.spacemesh.v1.AccountMeshData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spacemesh.v1.AccountMeshData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTransaction();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      types_pb.Transaction.serializeBinaryToWriter
    );
  }
  f = message.getActivation();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      types_pb.Activation.serializeBinaryToWriter
    );
  }
};


/**
 * optional Transaction transaction = 1;
 * @return {?proto.spacemesh.v1.Transaction}
 */
proto.spacemesh.v1.AccountMeshData.prototype.getTransaction = function() {
  return /** @type{?proto.spacemesh.v1.Transaction} */ (
    jspb.Message.getWrapperField(this, types_pb.Transaction, 1));
};


/** @param {?proto.spacemesh.v1.Transaction|undefined} value */
proto.spacemesh.v1.AccountMeshData.prototype.setTransaction = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.spacemesh.v1.AccountMeshData.oneofGroups_[0], value);
};


proto.spacemesh.v1.AccountMeshData.prototype.clearTransaction = function() {
  this.setTransaction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.spacemesh.v1.AccountMeshData.prototype.hasTransaction = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Activation activation = 2;
 * @return {?proto.spacemesh.v1.Activation}
 */
proto.spacemesh.v1.AccountMeshData.prototype.getActivation = function() {
  return /** @type{?proto.spacemesh.v1.Activation} */ (
    jspb.Message.getWrapperField(this, types_pb.Activation, 2));
};


/** @param {?proto.spacemesh.v1.Activation|undefined} value */
proto.spacemesh.v1.AccountMeshData.prototype.setActivation = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.spacemesh.v1.AccountMeshData.oneofGroups_[0], value);
};


proto.spacemesh.v1.AccountMeshData.prototype.clearActivation = function() {
  this.setActivation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.spacemesh.v1.AccountMeshData.prototype.hasActivation = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.spacemesh.v1.AccountMeshDataStreamRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.spacemesh.v1.AccountMeshDataStreamRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.spacemesh.v1.AccountMeshDataStreamRequest.displayName = 'proto.spacemesh.v1.AccountMeshDataStreamRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.spacemesh.v1.AccountMeshDataStreamRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.spacemesh.v1.AccountMeshDataStreamRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.spacemesh.v1.AccountMeshDataStreamRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spacemesh.v1.AccountMeshDataStreamRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    filter: (f = msg.getFilter()) && proto.spacemesh.v1.AccountMeshDataFilter.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.spacemesh.v1.AccountMeshDataStreamRequest}
 */
proto.spacemesh.v1.AccountMeshDataStreamRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.spacemesh.v1.AccountMeshDataStreamRequest;
  return proto.spacemesh.v1.AccountMeshDataStreamRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.spacemesh.v1.AccountMeshDataStreamRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.spacemesh.v1.AccountMeshDataStreamRequest}
 */
proto.spacemesh.v1.AccountMeshDataStreamRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.spacemesh.v1.AccountMeshDataFilter;
      reader.readMessage(value,proto.spacemesh.v1.AccountMeshDataFilter.deserializeBinaryFromReader);
      msg.setFilter(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.spacemesh.v1.AccountMeshDataStreamRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.spacemesh.v1.AccountMeshDataStreamRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.spacemesh.v1.AccountMeshDataStreamRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spacemesh.v1.AccountMeshDataStreamRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFilter();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.spacemesh.v1.AccountMeshDataFilter.serializeBinaryToWriter
    );
  }
};


/**
 * optional AccountMeshDataFilter filter = 1;
 * @return {?proto.spacemesh.v1.AccountMeshDataFilter}
 */
proto.spacemesh.v1.AccountMeshDataStreamRequest.prototype.getFilter = function() {
  return /** @type{?proto.spacemesh.v1.AccountMeshDataFilter} */ (
    jspb.Message.getWrapperField(this, proto.spacemesh.v1.AccountMeshDataFilter, 1));
};


/** @param {?proto.spacemesh.v1.AccountMeshDataFilter|undefined} value */
proto.spacemesh.v1.AccountMeshDataStreamRequest.prototype.setFilter = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.spacemesh.v1.AccountMeshDataStreamRequest.prototype.clearFilter = function() {
  this.setFilter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.spacemesh.v1.AccountMeshDataStreamRequest.prototype.hasFilter = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.spacemesh.v1.AccountMeshDataStreamResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.spacemesh.v1.AccountMeshDataStreamResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.spacemesh.v1.AccountMeshDataStreamResponse.displayName = 'proto.spacemesh.v1.AccountMeshDataStreamResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.spacemesh.v1.AccountMeshDataStreamResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.spacemesh.v1.AccountMeshDataStreamResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.spacemesh.v1.AccountMeshDataStreamResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spacemesh.v1.AccountMeshDataStreamResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    datum: (f = msg.getDatum()) && proto.spacemesh.v1.AccountMeshData.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.spacemesh.v1.AccountMeshDataStreamResponse}
 */
proto.spacemesh.v1.AccountMeshDataStreamResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.spacemesh.v1.AccountMeshDataStreamResponse;
  return proto.spacemesh.v1.AccountMeshDataStreamResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.spacemesh.v1.AccountMeshDataStreamResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.spacemesh.v1.AccountMeshDataStreamResponse}
 */
proto.spacemesh.v1.AccountMeshDataStreamResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.spacemesh.v1.AccountMeshData;
      reader.readMessage(value,proto.spacemesh.v1.AccountMeshData.deserializeBinaryFromReader);
      msg.setDatum(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.spacemesh.v1.AccountMeshDataStreamResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.spacemesh.v1.AccountMeshDataStreamResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.spacemesh.v1.AccountMeshDataStreamResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spacemesh.v1.AccountMeshDataStreamResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDatum();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.spacemesh.v1.AccountMeshData.serializeBinaryToWriter
    );
  }
};


/**
 * optional AccountMeshData datum = 1;
 * @return {?proto.spacemesh.v1.AccountMeshData}
 */
proto.spacemesh.v1.AccountMeshDataStreamResponse.prototype.getDatum = function() {
  return /** @type{?proto.spacemesh.v1.AccountMeshData} */ (
    jspb.Message.getWrapperField(this, proto.spacemesh.v1.AccountMeshData, 1));
};


/** @param {?proto.spacemesh.v1.AccountMeshData|undefined} value */
proto.spacemesh.v1.AccountMeshDataStreamResponse.prototype.setDatum = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.spacemesh.v1.AccountMeshDataStreamResponse.prototype.clearDatum = function() {
  this.setDatum(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.spacemesh.v1.AccountMeshDataStreamResponse.prototype.hasDatum = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.spacemesh.v1.AccountMeshDataQueryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.spacemesh.v1.AccountMeshDataQueryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.spacemesh.v1.AccountMeshDataQueryRequest.displayName = 'proto.spacemesh.v1.AccountMeshDataQueryRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.spacemesh.v1.AccountMeshDataQueryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.spacemesh.v1.AccountMeshDataQueryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.spacemesh.v1.AccountMeshDataQueryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spacemesh.v1.AccountMeshDataQueryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    filter: (f = msg.getFilter()) && proto.spacemesh.v1.AccountMeshDataFilter.toObject(includeInstance, f),
    minLayer: (f = msg.getMinLayer()) && types_pb.LayerNumber.toObject(includeInstance, f),
    maxResults: jspb.Message.getFieldWithDefault(msg, 3, 0),
    offset: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.spacemesh.v1.AccountMeshDataQueryRequest}
 */
proto.spacemesh.v1.AccountMeshDataQueryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.spacemesh.v1.AccountMeshDataQueryRequest;
  return proto.spacemesh.v1.AccountMeshDataQueryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.spacemesh.v1.AccountMeshDataQueryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.spacemesh.v1.AccountMeshDataQueryRequest}
 */
proto.spacemesh.v1.AccountMeshDataQueryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.spacemesh.v1.AccountMeshDataFilter;
      reader.readMessage(value,proto.spacemesh.v1.AccountMeshDataFilter.deserializeBinaryFromReader);
      msg.setFilter(value);
      break;
    case 2:
      var value = new types_pb.LayerNumber;
      reader.readMessage(value,types_pb.LayerNumber.deserializeBinaryFromReader);
      msg.setMinLayer(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMaxResults(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setOffset(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.spacemesh.v1.AccountMeshDataQueryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.spacemesh.v1.AccountMeshDataQueryRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.spacemesh.v1.AccountMeshDataQueryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spacemesh.v1.AccountMeshDataQueryRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFilter();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.spacemesh.v1.AccountMeshDataFilter.serializeBinaryToWriter
    );
  }
  f = message.getMinLayer();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      types_pb.LayerNumber.serializeBinaryToWriter
    );
  }
  f = message.getMaxResults();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getOffset();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
};


/**
 * optional AccountMeshDataFilter filter = 1;
 * @return {?proto.spacemesh.v1.AccountMeshDataFilter}
 */
proto.spacemesh.v1.AccountMeshDataQueryRequest.prototype.getFilter = function() {
  return /** @type{?proto.spacemesh.v1.AccountMeshDataFilter} */ (
    jspb.Message.getWrapperField(this, proto.spacemesh.v1.AccountMeshDataFilter, 1));
};


/** @param {?proto.spacemesh.v1.AccountMeshDataFilter|undefined} value */
proto.spacemesh.v1.AccountMeshDataQueryRequest.prototype.setFilter = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.spacemesh.v1.AccountMeshDataQueryRequest.prototype.clearFilter = function() {
  this.setFilter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.spacemesh.v1.AccountMeshDataQueryRequest.prototype.hasFilter = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional LayerNumber min_layer = 2;
 * @return {?proto.spacemesh.v1.LayerNumber}
 */
proto.spacemesh.v1.AccountMeshDataQueryRequest.prototype.getMinLayer = function() {
  return /** @type{?proto.spacemesh.v1.LayerNumber} */ (
    jspb.Message.getWrapperField(this, types_pb.LayerNumber, 2));
};


/** @param {?proto.spacemesh.v1.LayerNumber|undefined} value */
proto.spacemesh.v1.AccountMeshDataQueryRequest.prototype.setMinLayer = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.spacemesh.v1.AccountMeshDataQueryRequest.prototype.clearMinLayer = function() {
  this.setMinLayer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.spacemesh.v1.AccountMeshDataQueryRequest.prototype.hasMinLayer = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint32 max_results = 3;
 * @return {number}
 */
proto.spacemesh.v1.AccountMeshDataQueryRequest.prototype.getMaxResults = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.spacemesh.v1.AccountMeshDataQueryRequest.prototype.setMaxResults = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint32 offset = 4;
 * @return {number}
 */
proto.spacemesh.v1.AccountMeshDataQueryRequest.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.spacemesh.v1.AccountMeshDataQueryRequest.prototype.setOffset = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.spacemesh.v1.AccountMeshDataQueryResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.spacemesh.v1.AccountMeshDataQueryResponse.repeatedFields_, null);
};
goog.inherits(proto.spacemesh.v1.AccountMeshDataQueryResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.spacemesh.v1.AccountMeshDataQueryResponse.displayName = 'proto.spacemesh.v1.AccountMeshDataQueryResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.spacemesh.v1.AccountMeshDataQueryResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.spacemesh.v1.AccountMeshDataQueryResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.spacemesh.v1.AccountMeshDataQueryResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.spacemesh.v1.AccountMeshDataQueryResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spacemesh.v1.AccountMeshDataQueryResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    dataList: jspb.Message.toObjectList(msg.getDataList(),
    proto.spacemesh.v1.AccountMeshData.toObject, includeInstance),
    totalResults: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.spacemesh.v1.AccountMeshDataQueryResponse}
 */
proto.spacemesh.v1.AccountMeshDataQueryResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.spacemesh.v1.AccountMeshDataQueryResponse;
  return proto.spacemesh.v1.AccountMeshDataQueryResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.spacemesh.v1.AccountMeshDataQueryResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.spacemesh.v1.AccountMeshDataQueryResponse}
 */
proto.spacemesh.v1.AccountMeshDataQueryResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.spacemesh.v1.AccountMeshData;
      reader.readMessage(value,proto.spacemesh.v1.AccountMeshData.deserializeBinaryFromReader);
      msg.addData(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTotalResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.spacemesh.v1.AccountMeshDataQueryResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.spacemesh.v1.AccountMeshDataQueryResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.spacemesh.v1.AccountMeshDataQueryResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spacemesh.v1.AccountMeshDataQueryResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.spacemesh.v1.AccountMeshData.serializeBinaryToWriter
    );
  }
  f = message.getTotalResults();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * repeated AccountMeshData data = 1;
 * @return {!Array<!proto.spacemesh.v1.AccountMeshData>}
 */
proto.spacemesh.v1.AccountMeshDataQueryResponse.prototype.getDataList = function() {
  return /** @type{!Array<!proto.spacemesh.v1.AccountMeshData>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.spacemesh.v1.AccountMeshData, 1));
};


/** @param {!Array<!proto.spacemesh.v1.AccountMeshData>} value */
proto.spacemesh.v1.AccountMeshDataQueryResponse.prototype.setDataList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.spacemesh.v1.AccountMeshData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.spacemesh.v1.AccountMeshData}
 */
proto.spacemesh.v1.AccountMeshDataQueryResponse.prototype.addData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.spacemesh.v1.AccountMeshData, opt_index);
};


proto.spacemesh.v1.AccountMeshDataQueryResponse.prototype.clearDataList = function() {
  this.setDataList([]);
};


/**
 * optional uint32 total_results = 2;
 * @return {number}
 */
proto.spacemesh.v1.AccountMeshDataQueryResponse.prototype.getTotalResults = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.spacemesh.v1.AccountMeshDataQueryResponse.prototype.setTotalResults = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.spacemesh.v1.LayersQueryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.spacemesh.v1.LayersQueryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.spacemesh.v1.LayersQueryRequest.displayName = 'proto.spacemesh.v1.LayersQueryRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.spacemesh.v1.LayersQueryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.spacemesh.v1.LayersQueryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.spacemesh.v1.LayersQueryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spacemesh.v1.LayersQueryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    startLayer: (f = msg.getStartLayer()) && types_pb.LayerNumber.toObject(includeInstance, f),
    endLayer: (f = msg.getEndLayer()) && types_pb.LayerNumber.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.spacemesh.v1.LayersQueryRequest}
 */
proto.spacemesh.v1.LayersQueryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.spacemesh.v1.LayersQueryRequest;
  return proto.spacemesh.v1.LayersQueryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.spacemesh.v1.LayersQueryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.spacemesh.v1.LayersQueryRequest}
 */
proto.spacemesh.v1.LayersQueryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new types_pb.LayerNumber;
      reader.readMessage(value,types_pb.LayerNumber.deserializeBinaryFromReader);
      msg.setStartLayer(value);
      break;
    case 2:
      var value = new types_pb.LayerNumber;
      reader.readMessage(value,types_pb.LayerNumber.deserializeBinaryFromReader);
      msg.setEndLayer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.spacemesh.v1.LayersQueryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.spacemesh.v1.LayersQueryRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.spacemesh.v1.LayersQueryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spacemesh.v1.LayersQueryRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStartLayer();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      types_pb.LayerNumber.serializeBinaryToWriter
    );
  }
  f = message.getEndLayer();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      types_pb.LayerNumber.serializeBinaryToWriter
    );
  }
};


/**
 * optional LayerNumber start_layer = 1;
 * @return {?proto.spacemesh.v1.LayerNumber}
 */
proto.spacemesh.v1.LayersQueryRequest.prototype.getStartLayer = function() {
  return /** @type{?proto.spacemesh.v1.LayerNumber} */ (
    jspb.Message.getWrapperField(this, types_pb.LayerNumber, 1));
};


/** @param {?proto.spacemesh.v1.LayerNumber|undefined} value */
proto.spacemesh.v1.LayersQueryRequest.prototype.setStartLayer = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.spacemesh.v1.LayersQueryRequest.prototype.clearStartLayer = function() {
  this.setStartLayer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.spacemesh.v1.LayersQueryRequest.prototype.hasStartLayer = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional LayerNumber end_layer = 2;
 * @return {?proto.spacemesh.v1.LayerNumber}
 */
proto.spacemesh.v1.LayersQueryRequest.prototype.getEndLayer = function() {
  return /** @type{?proto.spacemesh.v1.LayerNumber} */ (
    jspb.Message.getWrapperField(this, types_pb.LayerNumber, 2));
};


/** @param {?proto.spacemesh.v1.LayerNumber|undefined} value */
proto.spacemesh.v1.LayersQueryRequest.prototype.setEndLayer = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.spacemesh.v1.LayersQueryRequest.prototype.clearEndLayer = function() {
  this.setEndLayer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.spacemesh.v1.LayersQueryRequest.prototype.hasEndLayer = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.spacemesh.v1.LayersQueryResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.spacemesh.v1.LayersQueryResponse.repeatedFields_, null);
};
goog.inherits(proto.spacemesh.v1.LayersQueryResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.spacemesh.v1.LayersQueryResponse.displayName = 'proto.spacemesh.v1.LayersQueryResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.spacemesh.v1.LayersQueryResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.spacemesh.v1.LayersQueryResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.spacemesh.v1.LayersQueryResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.spacemesh.v1.LayersQueryResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spacemesh.v1.LayersQueryResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    layerList: jspb.Message.toObjectList(msg.getLayerList(),
    types_pb.Layer.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.spacemesh.v1.LayersQueryResponse}
 */
proto.spacemesh.v1.LayersQueryResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.spacemesh.v1.LayersQueryResponse;
  return proto.spacemesh.v1.LayersQueryResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.spacemesh.v1.LayersQueryResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.spacemesh.v1.LayersQueryResponse}
 */
proto.spacemesh.v1.LayersQueryResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new types_pb.Layer;
      reader.readMessage(value,types_pb.Layer.deserializeBinaryFromReader);
      msg.addLayer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.spacemesh.v1.LayersQueryResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.spacemesh.v1.LayersQueryResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.spacemesh.v1.LayersQueryResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spacemesh.v1.LayersQueryResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLayerList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      types_pb.Layer.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Layer layer = 1;
 * @return {!Array<!proto.spacemesh.v1.Layer>}
 */
proto.spacemesh.v1.LayersQueryResponse.prototype.getLayerList = function() {
  return /** @type{!Array<!proto.spacemesh.v1.Layer>} */ (
    jspb.Message.getRepeatedWrapperField(this, types_pb.Layer, 1));
};


/** @param {!Array<!proto.spacemesh.v1.Layer>} value */
proto.spacemesh.v1.LayersQueryResponse.prototype.setLayerList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.spacemesh.v1.Layer=} opt_value
 * @param {number=} opt_index
 * @return {!proto.spacemesh.v1.Layer}
 */
proto.spacemesh.v1.LayersQueryResponse.prototype.addLayer = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.spacemesh.v1.Layer, opt_index);
};


proto.spacemesh.v1.LayersQueryResponse.prototype.clearLayerList = function() {
  this.setLayerList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.spacemesh.v1.LayerStreamRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.spacemesh.v1.LayerStreamRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.spacemesh.v1.LayerStreamRequest.displayName = 'proto.spacemesh.v1.LayerStreamRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.spacemesh.v1.LayerStreamRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.spacemesh.v1.LayerStreamRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.spacemesh.v1.LayerStreamRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spacemesh.v1.LayerStreamRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.spacemesh.v1.LayerStreamRequest}
 */
proto.spacemesh.v1.LayerStreamRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.spacemesh.v1.LayerStreamRequest;
  return proto.spacemesh.v1.LayerStreamRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.spacemesh.v1.LayerStreamRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.spacemesh.v1.LayerStreamRequest}
 */
proto.spacemesh.v1.LayerStreamRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.spacemesh.v1.LayerStreamRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.spacemesh.v1.LayerStreamRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.spacemesh.v1.LayerStreamRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spacemesh.v1.LayerStreamRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.spacemesh.v1.LayerStreamResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.spacemesh.v1.LayerStreamResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.spacemesh.v1.LayerStreamResponse.displayName = 'proto.spacemesh.v1.LayerStreamResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.spacemesh.v1.LayerStreamResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.spacemesh.v1.LayerStreamResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.spacemesh.v1.LayerStreamResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spacemesh.v1.LayerStreamResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    layer: (f = msg.getLayer()) && types_pb.Layer.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.spacemesh.v1.LayerStreamResponse}
 */
proto.spacemesh.v1.LayerStreamResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.spacemesh.v1.LayerStreamResponse;
  return proto.spacemesh.v1.LayerStreamResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.spacemesh.v1.LayerStreamResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.spacemesh.v1.LayerStreamResponse}
 */
proto.spacemesh.v1.LayerStreamResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new types_pb.Layer;
      reader.readMessage(value,types_pb.Layer.deserializeBinaryFromReader);
      msg.setLayer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.spacemesh.v1.LayerStreamResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.spacemesh.v1.LayerStreamResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.spacemesh.v1.LayerStreamResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spacemesh.v1.LayerStreamResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLayer();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      types_pb.Layer.serializeBinaryToWriter
    );
  }
};


/**
 * optional Layer layer = 1;
 * @return {?proto.spacemesh.v1.Layer}
 */
proto.spacemesh.v1.LayerStreamResponse.prototype.getLayer = function() {
  return /** @type{?proto.spacemesh.v1.Layer} */ (
    jspb.Message.getWrapperField(this, types_pb.Layer, 1));
};


/** @param {?proto.spacemesh.v1.Layer|undefined} value */
proto.spacemesh.v1.LayerStreamResponse.prototype.setLayer = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.spacemesh.v1.LayerStreamResponse.prototype.clearLayer = function() {
  this.setLayer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.spacemesh.v1.LayerStreamResponse.prototype.hasLayer = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * @enum {number}
 */
proto.spacemesh.v1.AccountMeshDataFlag = {
  ACCOUNT_MESH_DATA_FLAG_UNSPECIFIED: 0,
  ACCOUNT_MESH_DATA_FLAG_TRANSACTIONS: 1,
  ACCOUNT_MESH_DATA_FLAG_ACTIVATIONS: 2
};

goog.object.extend(exports, proto.spacemesh.v1);
