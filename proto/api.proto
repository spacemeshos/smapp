syntax = "proto3";
package pb;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

message SimpleMessage {
    string value = 1;
}

message AccountId {
    bytes address = 1;
}

message TxId {
    bytes id = 1;
}

message SignedTransaction {
    bytes tx = 1; // serialized with XDR
}

message LayerId {
    uint64 layerId = 1;
}

message TxStatusRequest {
    AccountId address = 1;
    uint64 layerId    = 2;
}

message Tx {
    bytes id          = 1;
    uint64 amount     = 2;
    AccountId address = 3;
    bool isApproved   = 4;
    bool isPending    = 5;
    bool isRejected   = 6;
}

message BroadcastMessage {
    string data = 1;
}

message BinaryMessage {
    bytes data = 1;
}

message CommitmentSizeMessage {
    uint64 mbCommitted = 1;
}

message LogicalDriveMessage {
    string logicalDrive = 1;
}

service SpacemeshService {
    rpc Echo(SimpleMessage) returns (SimpleMessage) {
        option (google.api.http) = {
          post: "/v1/example/echo"
          body: "*"
        };
    }
    rpc GetNonce(AccountId) returns (SimpleMessage) {
        option (google.api.http) = {
          post: "/v1/nonce"
          body: "*"
        };
    }
    rpc GetBalance(AccountId) returns (SimpleMessage) {
        option (google.api.http) = {
          post: "/v1/balance"
          body: "*"
        };
    }
    rpc SubmitTransaction(SignedTransaction) returns (TxId) {
        option (google.api.http) = {
          post: "/v1/submittransaction"
          body: "*"
        };
    }
    rpc GetLatestValidLayerId(google.protobuf.Empty) returns (LayerId) {
        option (google.api.http) = {
          post: "/v1/getlatestvalidlayerid"
          body: "*"
        };
    }
    rpc GetTxList(TxStatusRequest) returns (stream Tx) {
        option (google.api.http) = {
          post: "/v1/gettxlist"
          body: "*"
        };
    }
    rpc Broadcast(BroadcastMessage) returns (SimpleMessage) {
        option (google.api.http) = {
          post: "/v1/broadcast"
          body: "*"
        };
    }
    rpc BroadcastPoet(BinaryMessage) returns (SimpleMessage) {
        option (google.api.http) = {
          post: "/v1/broadcastpoet"
          body: "*"
        };
    }
    rpc SetCommitmentSize(CommitmentSizeMessage) returns (SimpleMessage) {
        option (google.api.http) = {
          post: "/v1/setcommitmentsize"
          body: "*"
        };
    }
    rpc SetLogicalDrive(LogicalDriveMessage) returns (SimpleMessage) {
        option (google.api.http) = {
          post: "/v1/setlogicaldrive"
          body: "*"
        };
    }
    rpc SetAwardsAddress(AccountId) returns (SimpleMessage) {
        option (google.api.http) = {
          post: "/v1/setawardsaddr"
          body: "*"
        };
    }
    rpc GetInitProgress(google.protobuf.Empty) returns (SimpleMessage) {
        option (google.api.http) = {
          post: "/v1/getprogress"
          body: "*"
        };
    }
    rpc GetTotalAwards(google.protobuf.Empty) returns (SimpleMessage) {
        option (google.api.http) = {
          post: "/v1/gettotalawards"
          body: "*"
        };
    }
    rpc GetUpcomingAwards(google.protobuf.Empty) returns (SimpleMessage) {
        option (google.api.http) = {
          post: "/v1/getupcomingawards"
          body: "*"
        };
    }
}
